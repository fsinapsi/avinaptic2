;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;                                                                      ;;;;
;;;;                                                                      ;;;;
;;;;                                                                      ;;;;
;;;;                                                                      ;;;;
;;;;                                                                      ;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(defnet parse-aud (f)
        (deflocal aud codec)

        (set codec 0)
        (repeat (not <_kv "aborted">)
                (parse-aud-check f aud codec)
                until (audp aud)
                (< codec 4)
                (inc codec 2) )
        (set <_kv "filetype"> "aud")
        (set <_kv "fileinfo"> aud)
        (set <_kv "audio"> 1)
        (set <_kv "cleaner"> (netptr parse-aud-clean)) )

(defnet parse-aud-clean (fileinfo)
        (close fileinfo) )

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;                                                                      ;;;;
;;;;                                                                      ;;;;
;;;;                                                                      ;;;;
;;;;                                                                      ;;;;
;;;;                                                                      ;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(defnet parse-aud-check (f @aud codec)
        (deflocal fpout)

        (fsetpos 0 f)
        (set @aud (aud-create f codec))
        (set fpout <_kv "audio-fpout">)
        (if (<> fpout undef)
        then    (aud-fpout-begin @aud fpout
                        (cfg-get-or-df "audio-saving-skip-garbage") )
                (fsetpos 0 fpout)
                (set <_kv "audio-aud"> @aud) )
        (opt*   (aud-parse @aud 131072)
                (if (<> (aud-codec @aud) undef)
                then    (parse-progress f "aud" undef) ))
        (if (or <_kv "aborted">
                (= (aud-codec @aud) undef)
                (>= (* 5 (+ (aud-initial-skip @aud)
                            (aud-internal-skip @aud)
                            (aud-buf-act @aud) ))
                    (aud-tot-read @aud) ))
        then    (close @aud)
                (clr @aud)
                (close <_kv "progress-win">)
                (assoc-clr _kv "progress-win")
                (assoc-clr _kv "progress-bar") ))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;                                                                      ;;;;
;;;;                                                                      ;;;;
;;;;                                                                      ;;;;
;;;;                                                                      ;;;;
;;;;                                                                      ;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

