;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;                                                                      ;;;;
;;;;                                                                      ;;;;
;;;;                                                                      ;;;;
;;;;                                                                      ;;;;
;;;;                                                                      ;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(defnet parse () (opt (parse0 false)))
(defnet parse0 (complete)
        (deflocal path f)

        (set path <_kv "path">)
        (set f (fopenro path))
        (if (= f undef)
        then    (iup-message-warning <_kv "win">
                        (+ (utf8-validate path)
                           $": file not found" ))
                (if (= <_kv "filesize"> undef)
                then    (assoc-clr _kv "path")
                else    (set <_kv "path"> (cfg-get "path")) )
                (fail) )
        (parse-clean)
        (assoc-clr _kv "fileinfo")
        (assoc-clr _kv "cleaner")
        (assoc-clr _kv "correction")
        (assoc-clr _kv "log-x264")
        (set <_kv "filetime"> (ftime path))
        (set <_kv "filesize"> (length f))
        (assoc-clr _kv "filetype")
        (set <_kv "magic"> (utf8-validate (magic-file path)))
        (set <_kv "id3tag"> (id3tag-file path))
        (set <_kv "exif"> (exif-file path))
        (set <_kv "video"> 0)
        (set <_kv "audio"> 0)
        (set <_kv "complete"> complete)
        (set <_kv "aborted"> false)
        (alt    (parse-avi _kv f)
                (parse-asf _kv f)
                (parse-mkv _kv f)
                (parse-mp4 _kv f)
                (parse-ogg _kv f)
                (parse-flv _kv f)
                (parse-aud _kv f)
                (parse-pix _kv f)
                (parse-srt _kv f)
                (if (not <_kv "aborted">)
                then    (assoc-clr _kv "filetype") ))
        (close f <_kv "progress-win">)
        (close <_kv "progress-img">)
        (assoc-clr _kv "progress-win")
        (assoc-clr _kv "progress-bar")
        (if <_kv "aborted">
        then    (set <_kv "complete"> false) )
        (set <_kv "path"> path)
        (set <_kv "short-path"> (utf8-validate (fullpath->name path)))
        (set <_kv "time"> (now))
        (parse-attach-correction)
        (parse-attach-log-x264 path)
        (cfg-set "path" path)
        (if <_kv "complete">
        then    (sound-alert) ))

(defnet parse-attach-correction ()
        (deflocal n a i vid fps)

        (set n <_kv "video">)
        (if (and <_kv "complete"> (> n 0))
        then    (set a (array default 0 n 3))
                (for i in 1 .. n do
                        (opt    (info->vid-fps-basic _kv (for-pos) vid fps)
                                (set <a (for-pos) 0> vid)
                                (set <a (for-pos) 1> (vid-qscale-correction-a vid))
                                (set <a (for-pos) 2> (vid-qscale-correction-b vid)) ))
                (set <_kv "correction"> a) ))

(defnet parse-attach-log-x264 (path)
        (deflocal i)

        (opt    (avcp)
                (search (sprint (path-separator path)) path i (maxint))
                (set path (sub 0 (+ i 1) path))
                (alt    (parse-log-x264 (+ path "x264 2nd pass.log") i)
                        (parse-log-x264 (+ path "x264.log") i) )
                (set <_kv "log-x264"> i) ))

(defnet parse-clean ()
        (deflocal cleaner)

        (set cleaner <_kv "cleaner">)
        (if (<> cleaner undef)
        then    (call cleaner <_kv "fileinfo">) ))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;                                                                      ;;;;
;;;;                                                                      ;;;;
;;;;                                                                      ;;;;
;;;;                                                                      ;;;;
;;;;                                                                      ;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(defnet parse-progress (f parser vid)
        (if (not (cli)) then (parse-progress-low f parser vid)) )

(defnet parse-progress-low (f parser vid)
        (deflocal win now pos tot pb)

        (not <_kv "aborted">)
        (set now (now))
        (set pos (fpos f))
        (set tot <_kv "filesize">)
        (set win <_kv "progress-win">)
        (if (= win undef)
        then    (set <_kv "progress-start-time"> now)
                (set <_kv "progress-start-pos"> pos)
                (parse-progress-setup)
                (set win <_kv "progress-win">)
        else    (iup-set-str-attribute <_kv "progress-time"> "TITLE"
                        (date-s2hhmmss (/ (* (- tot pos)
                                             (- now <_kv "progress-start-time">) )
                                          (- pos <_kv "progress-start-pos">) ))))
        (set pb <_kv "progress-bar">)
        (iup-set-double pb "VALUE" (/ pos tot))
        (iup-flush) )

(defnet parse-progress-setup ()
        (if (not (cli)) then (parse-progress-setup-low)) )

(defnet parse-progress-setup-low ()
        (deflocal gauge label button hbox dlg q)

        (set gauge (iup-gauge))

        (set label (iup-label "99:59:59"))

        (set q (queue))
        (set button (iup-button-icon $"Abort" (netptr parse-progress-abort-cb) (pix-load-static "16x16/dialog-cancel-3.png") q))

        (set hbox (iup-hbox gauge label button))
        (iup-set-str-attribute hbox "ALIGNMENT" "ACENTER")
        (iup-set-str-attribute hbox "MARGIN" "4x4")
        (iup-set-int hbox "GAP" 4)

        (set dlg (iup-dialog hbox))
        (iup-set-dlg-parent <_kv "win"> dlg)
        (iup-set-str-attribute dlg "TITLE" $"Analysis...")
        (iup-set-str-attribute dlg "DIALOGFRAME" "YES")
        (iup-set-callback dlg "CLOSE_CB" (netptr iup-success-cb))

        (iup-show-xy dlg (cmacro IUP_CENTERPARENT) (cmacro IUP_CENTERPARENT))

        (set <_kv "progress-win"> dlg)
        (set <_kv "progress-time"> label)
        (set <_kv "progress-bar"> gauge)
        (set <_kv "progress-img"> (queue-get q)) )

(defnet parse-progress-abort-cb (self)
        (deflocal d)

        (set d (now))
        (alt    (seq    (iup-message-confirm self $"The current operation will be aborted.\nAre you sure?")
                        (set <_kv "aborted"> true) )
                (assoc-inc _kv "progress-start-time" (- (now) d)) ))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;                                                                      ;;;;
;;;;                                                                      ;;;;
;;;;                                                                      ;;;;
;;;;                                                                      ;;;;
;;;;                                                                      ;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

